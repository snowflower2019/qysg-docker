version: "3.3"
services:
  nexus:
    restart: always
    image: sonatype/nexus3
    hostname: ${ip_address}.2
    container_name: nexus
    networks:
      default:
        ipv4_address: ${ip_address}.2
    volumes:
      - "./nexus/data:/nexus-data"

  nginx:
    image: nginx
    container_name: nginx
    hostname: ${ip_address}.3
    restart: always
    networks:
      default:
        ipv4_address: ${ip_address}.3
    volumes:
      - "./nginx/conf:/etc/nginx/conf.d"
      - "./nginx/logs:/var/log/nginx"
      - "./nginx/www:/usr/share/nginx/html"
    environment:
      - TZ=Asia/Shanghai

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    hostname: ${ip_address}.4
    restart: always
    networks:
      default:
        ipv4_address: ${ip_address}.4
 
  kafka1:
    image: wurstmeister/kafka
    container_name: kafka1
    hostname: ${ip_address}.5
    restart: always
    networks:
      default:
        ipv4_address: ${ip_address}.5
    links:
      - zookeeper
    depends_on:
      - zookeeper
#    volumes:
#      - ./kafka/logs1:/kafka
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${ip_address}.5:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_BROKER_ID: 1
      KAFKA_HOST_NAME: kafka1
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DELETE_RETENTION_MS: 1000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      JMX_PORT: 9999

  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    hostname: ${ip_address}.6
    restart: always
    networks:
      default:
        ipv4_address: ${ip_address}.6
    links:
      - zookeeper
    depends_on:
      - zookeeper
#    volumes:
#      - ./kafka/logs2:/kafka
    environment:
      KAFKA_HOST_NAME: kafka2
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${ip_address}.6:9092
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_BROKER_ID: 2
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DELETE_RETENTION_MS: 1000
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      JMX_PORT: 9999

  kafkamanager:
    image: hlebalbau/kafka-manager
    container_name: kafkamanager
    hostname: ${ip_address}.8
    restart: always
    networks:
      default:
        ipv4_address: ${ip_address}.8
    links:
      - zookeeper
      - kafka1
      - kafka2
    depends_on:
      - kafka1
      - kafka2
    environment:
      ZK_HOSTS: zookeeper:2181
      KAFKA_BROKERS: kafka1:9092,kafka2:9092
      KAFKA_MANAGER_AUTH_ENABLED: "true"
      KAFKA_MANAGER_USERNAME: "root"
      KAFKA_MANAGER_PASSWORD: "qysg18xxjs"
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    volumes:
      - ./kafka/manager/conf:/kafka-manager/conf
      - ./kafka/manager/logs:/kafka-manager/logs

  redis: 
    image: redis
    container_name: redis
    hostname: ${ip_address}.10
    restart: always
    command: redis-server --requirepass lhbwypems1324 --appendonly yes
    networks:
      default:
        ipv4_address: ${ip_address}.10
    volumes:
      - "./redis/data:/data"
#      - "./redis/redis.conf:/etc/redis/redis.conf"

  mysql:
    image: mysql
    container_name: mysql
    hostname: ${ip_address}.20
    restart: always
    networks:
      default:
        ipv4_address: ${ip_address}.20
    command: 
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --explicit_defaults_for_timestamp=true
      --max_allowed_packet=128M
      --lower_case_table_names=1
    environment:
      MYSQL_ROOT_PASSWORD: "lhbwyp_ems"
    volumes:
      - "./mysql/data:/var/lib/mysql"
      - ./mysql/conf:/etc/mysql
#      - "./mysql/conf/my.cnf:/etc/mysql/my.cnf"
#      - "./mysql/conf.d:/etc/mysql/conf.d"

  mongo:
    image: mongo
    container_name: mongo
    hostname: ${ip_address}.30
    restart: always
    networks:
      default:
        ipv4_address: ${ip_address}.30
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: qysg18xxjs
    volumes:
      - "./mongo/data:/data/db"
      - "./mongo/config:/data/configdb"
    command: mongod --auth # 启动授权登录

  tomcat:
    image: tomcat:jdk14-openjdk-oracle
    container_name: tomcat
    restart: always
    hostname: ${ip_address}.60
    networks:
      default:
        ipv4_address: ${ip_address}.60
    depends_on:
      - redis
      - mysql
      - kafka1
      - kafka2
    volumes:
      - "./tomcat/conf:/usr/local/tomcat/conf"
      - "./tomcat/webapps:/usr/local/tomcat/webapps"
      - "./tomcat/logs:/usr/local/tomcat/logs"

networks:
  default:
    external:
      name: webnet

